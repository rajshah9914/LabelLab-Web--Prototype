{"id":"../node_modules/zxcvbn/lib/main.js","dependencies":[{"name":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/zxcvbn/lib/main.js.map","includedInParent":true,"mtime":1486439859000},{"name":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/zxcvbn/src/main.coffee","includedInParent":true,"mtime":1462327472000},{"name":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/package.json","includedInParent":true,"mtime":1553433954598},{"name":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/.babelrc","includedInParent":true,"mtime":1552312477226},{"name":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/zxcvbn/package.json","includedInParent":true,"mtime":1553433953594},{"name":"./matching","loc":{"line":4,"column":19},"parent":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/zxcvbn/lib/main.js","resolved":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/zxcvbn/lib/matching.js"},{"name":"./scoring","loc":{"line":6,"column":18},"parent":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/zxcvbn/lib/main.js","resolved":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/zxcvbn/lib/scoring.js"},{"name":"./time_estimates","loc":{"line":8,"column":25},"parent":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/zxcvbn/lib/main.js","resolved":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/zxcvbn/lib/time_estimates.js"},{"name":"./feedback","loc":{"line":10,"column":19},"parent":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/zxcvbn/lib/main.js","resolved":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/zxcvbn/lib/feedback.js"}],"generated":{"js":"// Generated by CoffeeScript 1.10.0\nvar feedback, matching, scoring, time, time_estimates, zxcvbn;\n\nmatching = require('./matching');\n\nscoring = require('./scoring');\n\ntime_estimates = require('./time_estimates');\n\nfeedback = require('./feedback');\n\ntime = function() {\n  return (new Date()).getTime();\n};\n\nzxcvbn = function(password, user_inputs) {\n  var arg, attack_times, i, len, matches, prop, ref, result, sanitized_inputs, start, val;\n  if (user_inputs == null) {\n    user_inputs = [];\n  }\n  start = time();\n  sanitized_inputs = [];\n  for (i = 0, len = user_inputs.length; i < len; i++) {\n    arg = user_inputs[i];\n    if ((ref = typeof arg) === \"string\" || ref === \"number\" || ref === \"boolean\") {\n      sanitized_inputs.push(arg.toString().toLowerCase());\n    }\n  }\n  matching.set_user_input_dictionary(sanitized_inputs);\n  matches = matching.omnimatch(password);\n  result = scoring.most_guessable_match_sequence(password, matches);\n  result.calc_time = time() - start;\n  attack_times = time_estimates.estimate_attack_times(result.guesses);\n  for (prop in attack_times) {\n    val = attack_times[prop];\n    result[prop] = val;\n  }\n  result.feedback = feedback.get_feedback(result.score, result.sequence);\n  return result;\n};\n\nmodule.exports = zxcvbn;\n\n\n"},"sourceMaps":{"js":{"version":3,"file":"main.js","sourceRoot":"..","sources":["src/main.coffee"],"names":[],"mappings":";AAAA,IAAA;;AAAA,QAAA,GAAW,OAAA,CAAQ,YAAR;;AACX,OAAA,GAAU,OAAA,CAAQ,WAAR;;AACV,cAAA,GAAiB,OAAA,CAAQ,kBAAR;;AACjB,QAAA,GAAW,OAAA,CAAQ,YAAR;;AAEX,IAAA,GAAO,SAAA;SAAG,CAAK,IAAA,IAAA,CAAA,CAAL,CAAY,CAAC,OAAb,CAAA;AAAH;;AAEP,MAAA,GAAS,SAAC,QAAD,EAAW,WAAX;AACP,MAAA;;IADkB,cAAc;;EAChC,KAAA,GAAQ,IAAA,CAAA;EAER,gBAAA,GAAmB;AACnB,OAAA,6CAAA;;IACE,WAAG,OAAO,IAAP,KAAe,QAAf,IAAA,GAAA,KAAyB,QAAzB,IAAA,GAAA,KAAmC,SAAtC;MACE,gBAAgB,CAAC,IAAjB,CAAsB,GAAG,CAAC,QAAJ,CAAA,CAAc,CAAC,WAAf,CAAA,CAAtB,EADF;;AADF;EAGA,QAAQ,CAAC,yBAAT,CAAmC,gBAAnC;EACA,OAAA,GAAU,QAAQ,CAAC,SAAT,CAAmB,QAAnB;EACV,MAAA,GAAS,OAAO,CAAC,6BAAR,CAAsC,QAAtC,EAAgD,OAAhD;EACT,MAAM,CAAC,SAAP,GAAmB,IAAA,CAAA,CAAA,GAAS;EAC5B,YAAA,GAAe,cAAc,CAAC,qBAAf,CAAqC,MAAM,CAAC,OAA5C;AACf,OAAA,oBAAA;;IACE,MAAO,CAAA,IAAA,CAAP,GAAe;AADjB;EAEA,MAAM,CAAC,QAAP,GAAkB,QAAQ,CAAC,YAAT,CAAsB,MAAM,CAAC,KAA7B,EAAoC,MAAM,CAAC,QAA3C;SAClB;AAfO;;AAiBT,MAAM,CAAC,OAAP,GAAiB","sourcesContent":["matching = require './matching'\nscoring = require './scoring'\ntime_estimates = require './time_estimates'\nfeedback = require './feedback'\n\ntime = -> (new Date()).getTime()\n\nzxcvbn = (password, user_inputs = []) ->\n  start = time()\n  # reset the user inputs matcher on a per-request basis to keep things stateless\n  sanitized_inputs = []\n  for arg in user_inputs\n    if typeof arg in [\"string\", \"number\", \"boolean\"]\n      sanitized_inputs.push arg.toString().toLowerCase()\n  matching.set_user_input_dictionary sanitized_inputs\n  matches = matching.omnimatch password\n  result = scoring.most_guessable_match_sequence password, matches\n  result.calc_time = time() - start\n  attack_times = time_estimates.estimate_attack_times result.guesses\n  for prop, val of attack_times\n    result[prop] = val\n  result.feedback = feedback.get_feedback result.score, result.sequence\n  result\n\nmodule.exports = zxcvbn\n"]}},"error":null,"hash":"1264948912d721a835a319cbc7b529db","cacheData":{"env":{}}}