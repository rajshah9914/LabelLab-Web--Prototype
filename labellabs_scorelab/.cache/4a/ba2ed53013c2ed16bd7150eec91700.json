{"id":"../node_modules/aphrodite/lib/generate.js","dependencies":[{"name":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/package.json","includedInParent":true,"mtime":1552560844404},{"name":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/.babelrc","includedInParent":true,"mtime":1552312477226},{"name":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/aphrodite/package.json","includedInParent":true,"mtime":1552560843608},{"name":"inline-style-prefixer/static","loc":{"line":11,"column":41},"parent":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/aphrodite/lib/generate.js","resolved":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/inline-style-prefixer/static.js"},{"name":"./util","loc":{"line":15,"column":20},"parent":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/aphrodite/lib/generate.js","resolved":"/home/rajshah9914/Desktop/GSOC2019/labellabs_scorelab/node_modules/aphrodite/lib/util.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _inlineStylePrefixerStatic = require('inline-style-prefixer/static');\n\nvar _inlineStylePrefixerStatic2 = _interopRequireDefault(_inlineStylePrefixerStatic);\n\nvar _util = require('./util');\n\n/**\n * Generate CSS for a selector and some styles.\n *\n * This function handles the media queries, pseudo selectors, and descendant\n * styles that can be used in aphrodite styles.\n *\n * @param {string} selector: A base CSS selector for the styles to be generated\n *     with.\n * @param {Object} styleTypes: A list of properties of the return type of\n *     StyleSheet.create, e.g. [styles.red, styles.blue].\n * @param stringHandlers: See `generateCSSRuleset`\n * @param useImportant: See `generateCSSRuleset`\n *\n * To actually generate the CSS special-construct-less styles are passed to\n * `generateCSSRuleset`.\n *\n * For instance, a call to\n *\n *     generateCSSInner(\".foo\", {\n *       color: \"red\",\n *       \"@media screen\": {\n *         height: 20,\n *         \":hover\": {\n *           backgroundColor: \"black\"\n *         }\n *       },\n *       \":active\": {\n *         fontWeight: \"bold\",\n *         \">>bar\": {\n *           _names: { \"foo_bar\": true },\n *           height: 10,\n *         }\n *       }\n *     });\n *\n * will make 5 calls to `generateCSSRuleset`:\n *\n *     generateCSSRuleset(\".foo\", { color: \"red\" }, ...)\n *     generateCSSRuleset(\".foo:active\", { fontWeight: \"bold\" }, ...)\n *     generateCSSRuleset(\".foo:active .foo_bar\", { height: 10 }, ...)\n *     // These 2 will be wrapped in @media screen {}\n *     generateCSSRuleset(\".foo\", { height: 20 }, ...)\n *     generateCSSRuleset(\".foo:hover\", { backgroundColor: \"black\" }, ...)\n */\nvar generateCSS = function generateCSS(selector, styleTypes, stringHandlers, useImportant) {\n    var merged = styleTypes.reduce(_util.recursiveMerge);\n\n    var declarations = {};\n    var mediaQueries = {};\n    var pseudoStyles = {};\n\n    Object.keys(merged).forEach(function (key) {\n        if (key[0] === ':') {\n            pseudoStyles[key] = merged[key];\n        } else if (key[0] === '@') {\n            mediaQueries[key] = merged[key];\n        } else {\n            declarations[key] = merged[key];\n        }\n    });\n\n    return generateCSSRuleset(selector, declarations, stringHandlers, useImportant) + Object.keys(pseudoStyles).map(function (pseudoSelector) {\n        return generateCSSRuleset(selector + pseudoSelector, pseudoStyles[pseudoSelector], stringHandlers, useImportant);\n    }).join(\"\") + Object.keys(mediaQueries).map(function (mediaQuery) {\n        var ruleset = generateCSS(selector, [mediaQueries[mediaQuery]], stringHandlers, useImportant);\n        return mediaQuery + '{' + ruleset + '}';\n    }).join(\"\");\n};\n\nexports.generateCSS = generateCSS;\n/**\n * Helper method of generateCSSRuleset to facilitate custom handling of certain\n * CSS properties. Used for e.g. font families.\n *\n * See generateCSSRuleset for usage and documentation of paramater types.\n */\nvar runStringHandlers = function runStringHandlers(declarations, stringHandlers) {\n    var result = {};\n\n    Object.keys(declarations).forEach(function (key) {\n        // If a handler exists for this particular key, let it interpret\n        // that value first before continuing\n        if (stringHandlers && stringHandlers.hasOwnProperty(key)) {\n            result[key] = stringHandlers[key](declarations[key]);\n        } else {\n            result[key] = declarations[key];\n        }\n    });\n\n    return result;\n};\n\n/**\n * Generate a CSS ruleset with the selector and containing the declarations.\n *\n * This function assumes that the given declarations don't contain any special\n * children (such as media queries, pseudo-selectors, or descendant styles).\n *\n * Note that this method does not deal with nesting used for e.g.\n * psuedo-selectors or media queries. That responsibility is left to  the\n * `generateCSS` function.\n *\n * @param {string} selector: the selector associated with the ruleset\n * @param {Object} declarations: a map from camelCased CSS property name to CSS\n *     property value.\n * @param {Object.<string, function>} stringHandlers: a map from camelCased CSS\n *     property name to a function which will map the given value to the value\n *     that is output.\n * @param {bool} useImportant: A boolean saying whether to append \"!important\"\n *     to each of the CSS declarations.\n * @returns {string} A string of raw CSS.\n *\n * Examples:\n *\n *    generateCSSRuleset(\".blah\", { color: \"red\" })\n *    -> \".blah{color: red !important;}\"\n *    generateCSSRuleset(\".blah\", { color: \"red\" }, {}, false)\n *    -> \".blah{color: red}\"\n *    generateCSSRuleset(\".blah\", { color: \"red\" }, {color: c => c.toUpperCase})\n *    -> \".blah{color: RED}\"\n *    generateCSSRuleset(\".blah:hover\", { color: \"red\" })\n *    -> \".blah:hover{color: red}\"\n */\nvar generateCSSRuleset = function generateCSSRuleset(selector, declarations, stringHandlers, useImportant) {\n    var handledDeclarations = runStringHandlers(declarations, stringHandlers);\n\n    var prefixedDeclarations = (0, _inlineStylePrefixerStatic2['default'])(handledDeclarations);\n\n    var prefixedRules = (0, _util.flatten)((0, _util.objectToPairs)(prefixedDeclarations).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2);\n\n        var key = _ref2[0];\n        var value = _ref2[1];\n\n        if (Array.isArray(value)) {\n            var _ret = (function () {\n                // inline-style-prefix-all returns an array when there should be\n                // multiple rules, we will flatten to single rules\n\n                var prefixedValues = [];\n                var unprefixedValues = [];\n\n                value.forEach(function (v) {\n                    if (v.indexOf('-') === 0) {\n                        prefixedValues.push(v);\n                    } else {\n                        unprefixedValues.push(v);\n                    }\n                });\n\n                prefixedValues.sort();\n                unprefixedValues.sort();\n\n                return {\n                    v: prefixedValues.concat(unprefixedValues).map(function (v) {\n                        return [key, v];\n                    })\n                };\n            })();\n\n            if (typeof _ret === 'object') return _ret.v;\n        }\n        return [[key, value]];\n    }));\n\n    var rules = prefixedRules.map(function (_ref3) {\n        var _ref32 = _slicedToArray(_ref3, 2);\n\n        var key = _ref32[0];\n        var value = _ref32[1];\n\n        var stringValue = (0, _util.stringifyValue)(key, value);\n        var ret = (0, _util.kebabifyStyleName)(key) + ':' + stringValue + ';';\n        return useImportant === false ? ret : (0, _util.importantify)(ret);\n    }).join(\"\");\n\n    if (rules) {\n        return selector + '{' + rules + '}';\n    } else {\n        return \"\";\n    }\n};\nexports.generateCSSRuleset = generateCSSRuleset;","map":{"mappings":[{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/aphrodite/lib/generate.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}}],"sources":{"../node_modules/aphrodite/lib/generate.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _inlineStylePrefixerStatic = require('inline-style-prefixer/static');\n\nvar _inlineStylePrefixerStatic2 = _interopRequireDefault(_inlineStylePrefixerStatic);\n\nvar _util = require('./util');\n\n/**\n * Generate CSS for a selector and some styles.\n *\n * This function handles the media queries, pseudo selectors, and descendant\n * styles that can be used in aphrodite styles.\n *\n * @param {string} selector: A base CSS selector for the styles to be generated\n *     with.\n * @param {Object} styleTypes: A list of properties of the return type of\n *     StyleSheet.create, e.g. [styles.red, styles.blue].\n * @param stringHandlers: See `generateCSSRuleset`\n * @param useImportant: See `generateCSSRuleset`\n *\n * To actually generate the CSS special-construct-less styles are passed to\n * `generateCSSRuleset`.\n *\n * For instance, a call to\n *\n *     generateCSSInner(\".foo\", {\n *       color: \"red\",\n *       \"@media screen\": {\n *         height: 20,\n *         \":hover\": {\n *           backgroundColor: \"black\"\n *         }\n *       },\n *       \":active\": {\n *         fontWeight: \"bold\",\n *         \">>bar\": {\n *           _names: { \"foo_bar\": true },\n *           height: 10,\n *         }\n *       }\n *     });\n *\n * will make 5 calls to `generateCSSRuleset`:\n *\n *     generateCSSRuleset(\".foo\", { color: \"red\" }, ...)\n *     generateCSSRuleset(\".foo:active\", { fontWeight: \"bold\" }, ...)\n *     generateCSSRuleset(\".foo:active .foo_bar\", { height: 10 }, ...)\n *     // These 2 will be wrapped in @media screen {}\n *     generateCSSRuleset(\".foo\", { height: 20 }, ...)\n *     generateCSSRuleset(\".foo:hover\", { backgroundColor: \"black\" }, ...)\n */\nvar generateCSS = function generateCSS(selector, styleTypes, stringHandlers, useImportant) {\n    var merged = styleTypes.reduce(_util.recursiveMerge);\n\n    var declarations = {};\n    var mediaQueries = {};\n    var pseudoStyles = {};\n\n    Object.keys(merged).forEach(function (key) {\n        if (key[0] === ':') {\n            pseudoStyles[key] = merged[key];\n        } else if (key[0] === '@') {\n            mediaQueries[key] = merged[key];\n        } else {\n            declarations[key] = merged[key];\n        }\n    });\n\n    return generateCSSRuleset(selector, declarations, stringHandlers, useImportant) + Object.keys(pseudoStyles).map(function (pseudoSelector) {\n        return generateCSSRuleset(selector + pseudoSelector, pseudoStyles[pseudoSelector], stringHandlers, useImportant);\n    }).join(\"\") + Object.keys(mediaQueries).map(function (mediaQuery) {\n        var ruleset = generateCSS(selector, [mediaQueries[mediaQuery]], stringHandlers, useImportant);\n        return mediaQuery + '{' + ruleset + '}';\n    }).join(\"\");\n};\n\nexports.generateCSS = generateCSS;\n/**\n * Helper method of generateCSSRuleset to facilitate custom handling of certain\n * CSS properties. Used for e.g. font families.\n *\n * See generateCSSRuleset for usage and documentation of paramater types.\n */\nvar runStringHandlers = function runStringHandlers(declarations, stringHandlers) {\n    var result = {};\n\n    Object.keys(declarations).forEach(function (key) {\n        // If a handler exists for this particular key, let it interpret\n        // that value first before continuing\n        if (stringHandlers && stringHandlers.hasOwnProperty(key)) {\n            result[key] = stringHandlers[key](declarations[key]);\n        } else {\n            result[key] = declarations[key];\n        }\n    });\n\n    return result;\n};\n\n/**\n * Generate a CSS ruleset with the selector and containing the declarations.\n *\n * This function assumes that the given declarations don't contain any special\n * children (such as media queries, pseudo-selectors, or descendant styles).\n *\n * Note that this method does not deal with nesting used for e.g.\n * psuedo-selectors or media queries. That responsibility is left to  the\n * `generateCSS` function.\n *\n * @param {string} selector: the selector associated with the ruleset\n * @param {Object} declarations: a map from camelCased CSS property name to CSS\n *     property value.\n * @param {Object.<string, function>} stringHandlers: a map from camelCased CSS\n *     property name to a function which will map the given value to the value\n *     that is output.\n * @param {bool} useImportant: A boolean saying whether to append \"!important\"\n *     to each of the CSS declarations.\n * @returns {string} A string of raw CSS.\n *\n * Examples:\n *\n *    generateCSSRuleset(\".blah\", { color: \"red\" })\n *    -> \".blah{color: red !important;}\"\n *    generateCSSRuleset(\".blah\", { color: \"red\" }, {}, false)\n *    -> \".blah{color: red}\"\n *    generateCSSRuleset(\".blah\", { color: \"red\" }, {color: c => c.toUpperCase})\n *    -> \".blah{color: RED}\"\n *    generateCSSRuleset(\".blah:hover\", { color: \"red\" })\n *    -> \".blah:hover{color: red}\"\n */\nvar generateCSSRuleset = function generateCSSRuleset(selector, declarations, stringHandlers, useImportant) {\n    var handledDeclarations = runStringHandlers(declarations, stringHandlers);\n\n    var prefixedDeclarations = (0, _inlineStylePrefixerStatic2['default'])(handledDeclarations);\n\n    var prefixedRules = (0, _util.flatten)((0, _util.objectToPairs)(prefixedDeclarations).map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2);\n\n        var key = _ref2[0];\n        var value = _ref2[1];\n\n        if (Array.isArray(value)) {\n            var _ret = (function () {\n                // inline-style-prefix-all returns an array when there should be\n                // multiple rules, we will flatten to single rules\n\n                var prefixedValues = [];\n                var unprefixedValues = [];\n\n                value.forEach(function (v) {\n                    if (v.indexOf('-') === 0) {\n                        prefixedValues.push(v);\n                    } else {\n                        unprefixedValues.push(v);\n                    }\n                });\n\n                prefixedValues.sort();\n                unprefixedValues.sort();\n\n                return {\n                    v: prefixedValues.concat(unprefixedValues).map(function (v) {\n                        return [key, v];\n                    })\n                };\n            })();\n\n            if (typeof _ret === 'object') return _ret.v;\n        }\n        return [[key, value]];\n    }));\n\n    var rules = prefixedRules.map(function (_ref3) {\n        var _ref32 = _slicedToArray(_ref3, 2);\n\n        var key = _ref32[0];\n        var value = _ref32[1];\n\n        var stringValue = (0, _util.stringifyValue)(key, value);\n        var ret = (0, _util.kebabifyStyleName)(key) + ':' + stringValue + ';';\n        return useImportant === false ? ret : (0, _util.importantify)(ret);\n    }).join(\"\");\n\n    if (rules) {\n        return selector + '{' + rules + '}';\n    } else {\n        return \"\";\n    }\n};\nexports.generateCSSRuleset = generateCSSRuleset;"},"lineCount":199}},"hash":"e8e3427909b0f234af73d5f897a83b8c","cacheData":{"env":{}}}